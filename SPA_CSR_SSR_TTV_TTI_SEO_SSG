1. Single Page Application와 CSR의 등장
  1) 웹 사이트의 사소한 동적 이벤트를 결과를 업데이트할 때 기존의 SSR 방식은 매번 새로고침으로 인한 지연현상이 생기는 단점이 있었다.
     다행히 Ajax 기술이 나온 이후로 http 통신으로 데이터를 전송하고 결과를 받아와 js로 명령을 줄 수 있게 되면서 SPA 트랜드가 생겨났다. 
     초기엔 일일이 JS 프로그래밍을 통해 SPA를 구현했지만 점점 JS의 강력한 커뮤니티를 바탕으로 뷰, 리액트같은 프레임워크로 CSR시대로 접어들게 된다. 
  2) 스마트폰의 등장으로 모바일 앱 환경에 맞도록 pc에서 웹 사이트 구현 과정을 다시 반복해야 하는 번거로움이 생겼다.
     서버에서 데이터만 보내줘도 브라우저에서 HTML, CSS, JS로 랜더링이 가능하다면 서버에서 랜더링까지 하는 업무를 없앨 수 있어
     백엔드는 데이터 로직에만 집중할 수 있게 된다.
  
     이를 위해 브라우저에서 돌아가는 JS로 브라우저에서 렌더링할 수 있도록 해주는 프레임워크인 리액트, 뷰, 앵귤러라는 SPA 프레임워크가 나타났다.

1-1 vue front, node back 개발하면서 느낀점
  - vue로 프론트를 개발하면서 run serve해서 웹 페이지를 보면서 해가지구 back은 서버에 있는 걸 알겠는데 front는 그럼 어디에 있는거지라는 의문이 있었다.
  - front 개발이 완료되면 vue파일을 js로 변환시키는데 결국 이 변환된 js파일을 통해 맨 처음에 배웠던 js를 통해 html을 조작하는 과정을 수행하는 것이다.
  - 결국 vue라는 것은 개발을 할 때 편리하고자 함이다.

2. SPA 동작 과정
  1) 처음에 서버에서 정적웹처럼 HTML, CSS, JS로 된 코드를 브라우저에 전송한다.
  2) client에서는 JS로 주어진 데이터에 따라 HTML 웹페이지를 렌더링한다.  
  이를 통해 사이트에서 뭘 할 때마다 새로 접속하지 않고 이미 로드된 화면에서 많은 기능을 수행할 수 있어 SPA라고 부른다.
  
3. SPA 장점
  - 새로고침 없이 부드럽게 사용할 수 있다.
  - 반면 SSR에서는 새로고침이 여전히 존재하고 과도한 유저들의 이벤트 발생 시 서버에 부담이 늘어난다.
    또한 사용자가 빠르게 웹사이트를 확인할 수 있지만 JS가 아직 다운받아지기 전이라 클릭 반응이 없을 수 있다.
  
4. SPA 단점
  - SEO(Search Engine Optimization)가 좋지 않다. -> CSR에서 사용하는 HTML Body 태그는 비어져 있으므로 검색엔진에 등록하기 어렵다.
  - 첫 화면이 느리다. -> 처음 웹페이지를 불러왔을 때 빈페이지로, js코드를 가져와 적용하여 화면에 나타나기까지 시간이 걸린다.
  - 반면 SSR에서는 첫 화면 로드가 빠르고 효율적인 SEO를 가진다.

5. CSR과 SSR의 시간 순서 동작 과정
  - CSR : 웹사이트 접속 -> 서버에서 index(비어있음), js를 받기 -> html에 링크된 모든 로직이 담긴 js를 서버에 요청 및 받아옴
          -> js 소스를 브라우저에서 렌더링해서 웹 사이트를 보고 클릭할 수 있게 된다.
  - SSR : 웹사이트 접속 -> 서버에서 이미 만들어진(렌더링된) index를 받아옴 -> 이때 웹사이트 볼 수 있음 -> JS(동적이벤트)를 서버에 요청 및 받아옴
          -> 이제 웹사이트 Interaction이 가능함
  
5-1. 그린다? vs 읽고 그린다?
  - SSR : HTML(화면 상 보이는 것들)이 전부 채워져 있는 HTML을 받아서 있는 DOM을 그리기만 하면 된다. 
  - CSR : JS파일을 받고 이걸 해석해서 HTML DOM을 만들고 이걸 그려야 한다.
  
6. 혼합 방식(NEXT, NUXT)
  - CSR기반으로 처음에는 SSR방식으로 받아와 초기화면 빠르게, SEO 활용도를 높인다. 이후에는 CSR로 받아와 새로고침없이 부드럽게 이용한다.
  1) SSR 방식 : Vue처럼 프론트엔드 코딩한거를 정적 파일로 서버에 올려두는 게 아닌, node.js로 깔린 서버에서 app을 실행해 프론트엔드를 배포한다.
     이런식으로 페이지 접속 시 바로 나타나야 할 것들을 정해 서버에서 미리 렌더링해서 보낼 수 있도록 한다.
     그 이후 다른 요소들은 기존 vue 방식대로 동작하도록 한다.
  2) SSG 방식 : 
  
7. SSG(Static Site Generation) : CSR 기반에서 정적 웹 생성기(static site generator)를 사용해 정적으로 웹페이지를 미리 생성해두어 서버에
                                 배포해놓을 수 있다.

*참고
  - SEO : 포털 검색 엔진은 서버에 등록된 웺사이트 HTML을 분석해 검색엔진에 등록해 유저의 검색목록에 보이게 한다.
  - TTV : 사용자가 웹 사이트를 볼 수 있는 시간
  - TTI : 사용자가 웹 사이트와 Interaction 즉 이벤트를 발생시킬 수 있는 시간
  
8. Reference
  https://www.yalco.kr/50_ssr/
  
