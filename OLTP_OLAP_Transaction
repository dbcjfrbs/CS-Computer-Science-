1. Online Transaction Process
  - 트랜잭션 기반의 데이터 작업을 말한다. 예를 들어 은행 거래에서 일어나는 트랜잭션 단위의 활동이 이에 해당한다.
  - 삽입, 삭제, 수정 작업이 주로 사용된다.
  - 짧고 빠르게 유저에 의해 일어난다.
  - 정기적인 백업이 요구된다.
  
2. Online Analytical Process
  - 트랜잭션 데이터의 집계를 목적으로 데이터를 가공하는 작업이다. 
    카드 사용으로 쌓인 트랜잭션 테이터로 연간 대비 실적같은 분석을 하기 위해 여러 복잡한 쿼리를 적용한다.
  - 조회를 주로 사용한다.
  - 손실된 데이터는 정기적으로 백업되는 OLTP DB로부터 복구 가능하다.
  
3. 트랜젝션 : DB상태 변화를 위해 수행하는 작업 묶음, 일련의 쿼리 묶음이다.
  - Atomic : 트랜잭션이 모두 db에 반영되던가, 전혀 반영되지 않던가 해야한다.
  - Consistency : 이름이 있어야 한다는 규약이 있다면 트랜젝션 이후에도 이 제약이 만족되어야 한다.
  - Isolation : ~
  - Durablility : 트랜젝션이 성공했담녀 그 로그가 영구적으로 남아야 한다.
  
4. 트랜젝션 메커니즘 ex) a유저 돈 10000원을 b유저에게 전달하는 트랜젝션 상황
  0) db는 쿼리처리기, 데이터 캐시, 테이터 파일, 로그 캐시, 로그 파일이 있다.
  1) 쿼리처리기에서 요구하는 데이터가 캐시에 없으면 파일에서 캐시에 로드한다.
  2) 업데이트 전에 로그캐시에 기록한다.
    - undo 로그에는 업데이터 전 상태의 유저 a 레코드 값을 로그번호를 붙여 기록한다.
    - redo 로그에는 트랜젝션이 시작되었다는 걸 명시하고 업데이트 후 상태를 기록한다.
  3) 이후 데이터캐시에 있는 a 레코드 데이터를 변경한다.
  4) 이제 b에 대해 1~3과정을 반복한다.
  5) 만약 트랜젝션 중간에 오류가 나면 undo 기록을 통해 데이터를 rollback 수행한다.
  6) 만약 두 트랜젝션이 동시에 접근이 허용된다면 오류가 날 수 있어 롹을 걸어준다.
    - rock : 이용하고 있는 row, table이 해당 트랜잭션이 끝날때까지 점유된다.
  
  
